services:
  # Main Flask Application
  - type: web
    name: maintai-backend
    env: python
    plan: starter
    buildCommand: pip install -r requirements.txt
    startCommand: gunicorn --bind 0.0.0.0:$PORT src.main:app
    envVars:
      - key: FLASK_ENV
        value: production
      - key: FLASK_APP
        value: src.main:app
      - key: DATABASE_URL
        fromDatabase:
          name: maintai-postgres
          property: connectionString
      - key: SECRET_KEY
        generateValue: true
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: TWILIO_PHONE_NUMBER
        sync: false
      - key: SMTP_SERVER
        value: smtp.gmail.com
      - key: SMTP_PORT
        value: 587
      - key: EMAIL_USERNAME
        sync: false
      - key: EMAIL_PASSWORD
        sync: false
      - key: CORS_ORIGINS
        value: "*"
      - key: ALGERIAN_TIMEZONE
        value: Africa/Algiers
      - key: DEFAULT_LANGUAGE
        value: ar
    healthCheckPath: /health
    
  # PostgreSQL Database
  - type: pserv
    name: maintai-postgres
    env: postgresql
    plan: starter
    databaseName: maintai_db
    databaseUser: maintai_user
    
  # Redis for Caching (Optional)
  - type: redis
    name: maintai-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru

# Build settings
buildCommand: |
  pip install --upgrade pip
  pip install -r requirements.txt
  
# Health check settings
healthCheckPath: /health
healthCheckTimeout: 30

# Auto-deploy settings
autoDeploy: true

# Environment-specific settings
environments:
  production:
    envVars:
      - key: FLASK_ENV
        value: production
      - key: LOG_LEVEL
        value: INFO
      - key: ENABLE_DEBUG
        value: false
        
  staging:
    envVars:
      - key: FLASK_ENV
        value: staging
      - key: LOG_LEVEL
        value: DEBUG
      - key: ENABLE_DEBUG
        value: true

